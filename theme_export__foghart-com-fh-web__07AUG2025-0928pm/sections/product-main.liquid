<style>
{% if settings.image-switches == 'black' %}
.cursor-right {
  cursor: url('{{ 'arrow-right.svg' | asset_url | image_url: '32x32' }}'), auto;
}
.cursor-left {
  cursor: url('{{ 'arrow-left.svg' | asset_url | image_url: '32x32' }}'), auto;
}
{% elsif settings.image-switches == 'white' %}
.cursor-right {
  cursor: url('{{ 'arrow-right-white.svg' | asset_url | image_url: '32x32' }}'), auto;
}
.cursor-left {
  cursor: url('{{ 'arrow-left-white.svg' | asset_url | image_url: '32x32' }}'), auto;
}
{% endif %}

* {
  box-sizing: border-box;
}

/* Only target the product page container, not global body */
.ssense-container {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
}

/* SSENSE 3-Column Layout - Only for product page */
.page-width {
  max-width: none;
  padding: 0;
  margin: 0;
  width: 100%;
}

/* Updated grid for better responsiveness */
.ssense-container {
  display: grid;
  grid-template-columns: 1fr 2fr 1fr; /* Flexible columns */
  min-height: calc(100vh - 120px);
  width: 100%;
  max-width: 100vw;
}

/* Left Column - Product Info */
.product-info-left {
  padding: 40px 30px;
  overflow-y: auto;
  max-height: calc(100vh - 120px);
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.product-brand {
  font-size: 11px;
  font-weight: 500;
  color: #666;
  text-transform: uppercase;
  letter-spacing: 1px;
  margin-bottom: 8px;
}

.product-title {
  font-size: 16px;
  font-weight: 400;
  color: #000;
  margin: 0 0 25px 0;
  line-height: 1.4;
}

.product-description {
  font-size: 13px;
  color: #666;
  line-height: 1.6;
  margin-bottom: 20px;
}

.product-description ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

.product-description li {
  margin-bottom: 4px;
  position: relative;
  padding-left: 12px;
}

.product-description li:before {
  content: "•";
  position: absolute;
  left: 0;
  color: #666;
}

.product-price {
  font-size: 16px;
  font-weight: 500;
  color: #000;
  margin: 25px 0 8px 0;
}

.price-note {
  font-size: 11px;
  color: #999;
  margin-bottom: 20px;
}

/* Center Column - Image Gallery */
.product-images-center {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  overflow: hidden;
}

.figureImg {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  cursor: url('{% if settings.image-switches == 'black' %}{{ 'arrow-right.svg' | asset_url | image_url: '32x32' }}{% elsif settings.image-switches == 'white' %}{{ 'arrow-right-white.svg' | asset_url | image_url: '32x32' }}{% endif %}'), auto;
}

.product__item-img,
.product__item-video {
  max-width: 90%;
  max-height: 90vh;
  object-fit: contain;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  opacity: 0;
  pointer-events: none;
  z-index: 0;
  transition: opacity 0.3s ease;
}

.product__item-img.active,
.product__item-video.active {
  opacity: 1;
  pointer-events: auto;
  z-index: 1;
}

/* Right Column - Buy Section */
.product-actions-right {
  padding: 40px 30px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  max-height: calc(100vh - 120px);
  overflow-y: auto;
}

.product-options {
  margin: 15px 0 0 0;
}

.size-selector {
  width: 100%;
  border: 1px solid #000;
  background: white;
  font-size: 12px;
  padding: 18px 20px;
  font-weight: 500;
  cursor: pointer;
  color: #000;
  text-transform: uppercase;
  appearance: none;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
  background-position: right 15px center;
  background-repeat: no-repeat;
  background-size: 12px;
  padding-right: 45px;
  letter-spacing: 0.5px;
}

.size-selector:focus {
  outline: none;
  border-color: #000;
}

.size-selector option {
  padding: 10px;
  font-size: 12px;
  text-transform: uppercase;
}

.product-info__cart-btn {
  width: 100%;
  background: #000;
  color: white;
  border: none;
  padding: 18px 20px;
  font-size: 12px;
  font-weight: 500;
  text-transform: uppercase;
  cursor: pointer;
  margin: 15px 0 30px 0;
  letter-spacing: 0.5px;
  transition: background-color 0.2s ease;
}

.product-info__cart-btn:hover {
  background: #333;
}

.product-info__cart-btn:disabled {
  background: #ccc;
  cursor: not-allowed;
}

.model-info {
  font-size: 11px;
  color: #999;
  line-height: 1.4;
}

.size-guide {
  text-decoration: underline;
  cursor: pointer;
}

/* --- Responzívne úpravy pre mobil --- */

@media screen and (max-width: 1024px) {
  .ssense-container {
    display: block;
    min-height: auto;
  }
  
  .product-info-left,
  .product-actions-right {
    display: none; /* Skryje pôvodné bloky na mobile */
  }

  .product-images-center {
    height: 70vh;
    min-height: 400px;
  }
  
  .mobile-product-info-container {
    display: block;
    padding: 20px;
    max-height: none;
    overflow: hidden;
  }
  
  .mobile-product-info-container .product-brand {
    font-size: 11px;
    font-weight: 500;
    color: #666;
    text-transform: uppercase;
    letter-spacing: 1px;
    margin-bottom: 8px;
  }
  
  .mobile-product-info-container .product-title {
    font-size: 16px;
    font-weight: 400;
    color: #000;
    margin: 0 0 25px 0;
    line-height: 1.4;
  }
  
  .mobile-product-info-container .product-description {
    font-size: 13px;
    color: #666;
    line-height: 1.6;
    margin-bottom: 20px;
  }
  
  .mobile-product-info-container .product-price {
    font-size: 16px;
    font-weight: 500;
    color: #000;
    margin: 25px 0 8px 0;
  }
  
  .mobile-product-info-container .price-note {
    font-size: 11px;
    color: #999;
    margin-bottom: 20px;
  }

  .image-navigation {
    display: flex !important;
    justify-content: center;
    align-items: center;
    margin: 15px 0;
    gap: 15px;
  }

  .nav-dot {
    width: 8px;
    height: 8px;
    background-color: rgba(0, 0, 0, 0.3);
    border-radius: 50%;
    cursor: pointer;
    transition: background-color 0.2s ease;
    display: block !important;
  }

  .nav-dot.active {
    background-color: #000;
  }

  .nav-arrow img {
    width: 18px;
    height: 18px;
  }
}

@media screen and (max-width: 768px) {
  .product-info-left,
  .product-actions-right {
    padding: 15px;
  }

  .product-images-center,
  .figureImg,
  .product__item-img,
  .product__item-video {
    height: 60vh;
    min-height: 350px;
  }
}

@media screen and (max-width: 480px) {
  .product-info-left,
  .product-actions-right {
    padding: 10px 15px;
  }

  .product-brand {
    font-size: 10px;
  }

  .product-title {
    font-size: 14px;
  }

  .product-description {
    font-size: 12px;
  }

  .product-price {
    font-size: 14px;
  }

  .size-selector {
    font-size: 11px;
    padding: 15px 18px;
  }

  .product-info__cart-btn {
    font-size: 11px;
    padding: 16px 18px;
  }

  .model-info {
    font-size: 10px;
  }

  .product-images-center,
  .figureImg,
  .product__item-img,
  .product__item-video {
    height: 50vh;
    min-height: 300px;
  }
}

.product-table {
  max-width: 100%;
  overflow-x: auto;
}
</style>

<div class="page-width">
  {% assign current_variant = product.selected_or_first_available_variant %}
  
  <div class="ssense-container">
    <div class="product-info-left">
      <div class="product-brand">{{ product.vendor | default: shop.name }}</div>
      <h1 class="product-title">{{ product.title }}</h1>
      
      {% for block in section.blocks %}
        {% case block.type %}
           {%- when '@app' -%}
            {%- render block -%}                
           {% when 'item-type' %} 
            <div class="item-type" style="background: #f0f0f0; padding: 6px 10px; font-size: 10px; font-weight: 500; color: #000; text-transform: uppercase; display: inline-block; margin-bottom: 15px; letter-spacing: 0.5px;">
              {% if block.settings.item-type == 'pre-made' %}
                Pre-made
              {% else %}
                Pre-order
              {% endif %}
            </div>
        {% endcase %}
      {% endfor %}

      <div class="product-description">{{ product.description }}</div>
      
      {% for block in section.blocks %}
        {% case block.type %}
           {% when 'content' %} 
           <div class="product-block-content">
             <p>{{ block.settings.content }}</p>
           </div>
        {% endcase %}
      {% endfor %}
    </div>
    
    <div class="product-images-center">
      <div class="figureImg" id="gallery">
        {% for image in product.images %}
        <img class="product__item-img{% if forloop.first %} active{% endif %}" src="{{ image | img_url: 'master' }}" alt="{{ image.alt | escape }}">
        {% endfor %}

        {% for media in product.media %}
        {% if media.media_type == 'video' %}
        <video class="product__item-video" controls>
          <source src={{ media | video_tag: controls: true }}
        </video>
        {% endif %}
        {% endfor %}
      </div>
    </div>
    
    <div class="product-actions-right">
      <form action="/cart/add" method="post" enctype="multipart/form-data" id="AddToCartForm">
        <input type="hidden" name="id" value="{{ current_variant.id }}">

        {% for block in section.blocks %}
          {% case block.type %}
             {% when 'variant-selector' %}
              <div class="product-price">{{ current_variant.price | money }}</div>
              <div class="price-note">Taxes and duties included.</div>
              
              {% if product.variants.size > 1 %}
                {% for option in product.options_with_values %}
                  <div class="product-options">
                    <select class="size-selector" data-option="{{ option.position }}">
                      <option value="" disabled selected>Select a Size</option>
                      {% for value in option.values %}
                        <option value="{{ value | escape }}">{{ value }}</option>
                      {% endfor %}
                    </select>
                  </div>
                {% endfor %}
              {% endif %}
              
             {% when 'buy-buttons' %}
              {% if current_variant.available %}
                <button class='product-info__cart-btn' type="submit">Add to Bag</button>
              {% else %}
                <button class='product-info__cart-btn' type="button" disabled>Sold Out</button>
              {% endif %}
              
              {% if block.settings.enable_dynamic_checkout %}
                {%- form 'product', product -%}
                 {{ form | payment_button }}
                {% endform %}
              {% endif %}
        {% endcase %}
      {% endfor %}

      <div class="model-info">
        Model is 6ft 0" and wears size 50.
      </div>
      
      </form>
    </div>

    <div class="mobile-product-info-container">
      <div class="product-brand">{{ product.vendor | default: shop.name }}</div>
      <h1 class="product-title">{{ product.title }}</h1>
      {% for block in section.blocks %}
        {% case block.type %}
           {%- when '@app' -%}
            {%- render block -%}                
           {% when 'item-type' %} 
            <div class="item-type" style="background: #f0f0f0; padding: 6px 10px; font-size: 10px; font-weight: 500; color: #000; text-transform: uppercase; display: inline-block; margin-bottom: 15px; letter-spacing: 0.5px;">
              {% if block.settings.item-type == 'pre-made' %}
                Pre-made
              {% else %}
                Pre-order
              {% endif %}
            </div>
        {% endcase %}
      {% endfor %}

      <div class="product-description">{{ product.description }}</div>
      
      {% for block in section.blocks %}
        {% case block.type %}
           {% when 'content' %} 
           <div class="product-block-content">
             <p>{{ block.settings.content }}</p>
           </div>
        {% endcase %}
      {% endfor %}
      
      <form action="/cart/add" method="post" enctype="multipart/form-data" id="AddToCartFormMobile">
        <input type="hidden" name="id" value="{{ current_variant.id }}">
        
        {% for block in section.blocks %}
          {% case block.type %}
             {% when 'variant-selector' %}
              <div class="product-price">{{ current_variant.price | money }}</div>
              <div class="price-note">Taxes and duties included.</div>
              
              {% if product.variants.size > 1 %}
                {% for option in product.options_with_values %}
                  <div class="product-options">
                    <select class="size-selector" data-option="{{ option.position }}" name="id">
                      <option value="" disabled selected>Select a Size</option>
                      {% for variant in product.variants %}
                        <option value="{{ variant.id }}" {% if variant == current_variant %}selected="selected"{% endif %}>
                          {{ variant.title }}
                        </option>
                      {% endfor %}
                    </select>
                  </div>
                {% endfor %}
              {% endif %}
              
             {% when 'buy-buttons' %}
              {% if current_variant.available %}
                <button class='product-info__cart-btn' type="submit">Add to Bag</button>
              {% else %}
                <button class='product-info__cart-btn' type="button" disabled>Sold Out</button>
              {% endif %}
              
              {% if block.settings.enable_dynamic_checkout %}
                {%- form 'product', product -%}
                 {{ form | payment_button }}
                {% endform %}
              {% endif %}
        {% endcase %}
      {% endfor %}
      
      <div class="model-info">
        Model is 6ft 0" and wears size 50.
      </div>
      </form>
    </div>

  </div>
  
  <div class="product-info" style="display: none;">
    <div class="product-info__pc">
      <h2 class="product-info__title product-info__title-top">{{ product.title }}</h2>
      <div class="product-info__description-pc">{{ product.description }}</div>
    </div>
    
    <div class='product-info__main'>
      <div class='product-info__parent'>
        <div class='product-info__form'></div>
      </div>
      <div class='product-info__description-mobile'>{{ product.description }}</div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const gallery = document.getElementById('gallery');
  const items = gallery.querySelectorAll('.product__item-img, .product__item-video');
  const prevArrow = document.getElementById('prev-arrow');
  const nextArrow = document.getElementById('next-arrow');
  let currentIndex = 0;

  const productVariants = {{ product.variants | json }};
  let currentVariant = {{ product.selected_or_first_available_variant | json }};
  
  function updateCursor(event) {
    if (items.length <= 1) return;
    
    const rect = gallery.getBoundingClientRect();
    const x = event.clientX - rect.left;
    const isLeftHalf = x < rect.width / 2;
    
    gallery.classList.remove('cursor-left', 'cursor-right');
    if (isLeftHalf) {
      gallery.classList.add('cursor-left');
    } else {
      gallery.classList.add('cursor-right');
    }
  }
  
  function updateMediaPosition() {
    if (items.length > 1) {
      items.forEach((item, index) => {
        item.classList.remove('active');
        if (item.tagName === 'VIDEO') {
          item.pause();
          item.currentTime = 0;
        }
      });
      
      if (items[currentIndex]) {
        items[currentIndex].classList.add('active');
        if (items[currentIndex].tagName === 'VIDEO') {
          items[currentIndex].play();
        }
      }
    } else if (items.length === 1) {
      items[0].classList.add('active');
      if (items[0].tagName === 'VIDEO') {
        items[0].play();
      }
    }
  }
  
  function updatePrice(variant) {
    const priceElements = document.querySelectorAll('.product-price');
    const buttonElements = document.querySelectorAll('.product-info__cart-btn');
    
    if (variant) {
      const formattedPrice = new Intl.NumberFormat('en-US', {
        style: 'currency',
        currency: '{{ cart.currency.iso_code }}',
        minimumFractionDigits: 2
      }).format(variant.price / 100);
      priceElements.forEach(el => el.textContent = formattedPrice);
    }
    
    buttonElements.forEach(button => {
      if (variant && variant.available) {
        button.disabled = false;
        button.textContent = 'Add to Bag';
      } else {
        button.disabled = true;
        button.textContent = 'Sold Out';
      }
    });

    const formElements = document.querySelectorAll('form');
    formElements.forEach(form => {
        const idInput = form.querySelector('input[name="id"]');
        if (idInput) {
            idInput.value = variant.id;
        }
    });
  }
  
  function scrollToVariantMedia(selectedVariant) {
    const variantImage = selectedVariant.featured_image;
    if (variantImage) {
      const variantMediaIndex = [...items].findIndex(item => item.tagName === 'IMG' && item.src.includes(variantImage.src));

      if (variantMediaIndex !== -1 && variantMediaIndex !== currentIndex) {
        currentIndex = variantMediaIndex;
        updateMediaPosition();
      }
    }
  }

  function handleSwipe(direction) {
    if (direction === 'left') {
      currentIndex = (currentIndex + 1) % items.length;
    } else if (direction === 'right') {
      currentIndex = (currentIndex - 1 + items.length) % items.length;
    }
    updateMediaPosition();
  }

  function handleArrowClick(direction) {
    if (direction === 'left') {
      currentIndex = (currentIndex - 1 + items.length) % items.length;
    } else if (direction === 'right') {
      currentIndex = (currentIndex + 1) % items.length;
    }
    updateMediaPosition();
  }

  if (prevArrow) prevArrow.addEventListener('click', () => handleArrowClick('left'));
  if (nextArrow) nextArrow.addEventListener('click', () => handleArrowClick('right'));

  function isTouchDevice() {
    return ('ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0);
  }

  gallery.addEventListener('mousemove', updateCursor);

  gallery.addEventListener('click', function(event) {
    if (!isTouchDevice()) {
      const x = event.clientX - gallery.getBoundingClientRect().left;
      const totalWidth = gallery.offsetWidth;
      const direction = x < totalWidth / 2 ? 'right' : 'left';
      handleSwipe(direction);
    }
  });

  if (isTouchDevice()) {
    let touchstartX = 0;
    let touchendX = 0;
    gallery.addEventListener('touchstart', function(evt) {
      touchstartX = evt.touches[0].clientX;
    }, false);

    gallery.addEventListener('touchmove', function(evt) {
      touchendX = evt.touches[0].clientX;
    }, false);

    gallery.addEventListener('touchend', function(evt) {
      if (touchendX < touchstartX - 50) {
        handleSwipe('left');
      } else if (touchendX > touchstartX + 50) {
        handleSwipe('right');
      }
    }, false);
  }

  const variantSelectors = document.querySelectorAll('.size-selector');
  variantSelectors.forEach(selector => {
    selector.addEventListener('change', function() {
      const selectedValue = this.value;
      const selectedVariant = productVariants.find(variant => {
        // Find variant by ID if the selector's value is an ID
        return variant.id == selectedValue;
      });

      if (selectedVariant) {
        scrollToVariantMedia(selectedVariant);
        updatePrice(selectedVariant);
      }
    });
  });

  // Handle the initial state on mobile
  if (window.innerWidth <= 1024) {
    const desktopInfo = document.querySelector('.product-info-left');
    const desktopActions = document.querySelector('.product-actions-right');
    const mobileContainer = document.querySelector('.mobile-product-info-container');
    
    if (desktopInfo) desktopInfo.style.display = 'none';
    if (desktopActions) desktopActions.style.display = 'none';
    if (mobileContainer) mobileContainer.style.display = 'block';
  } else {
    const desktopInfo = document.querySelector('.product-info-left');
    const desktopActions = document.querySelector('.product-actions-right');
    const mobileContainer = document.querySelector('.mobile-product-info-container');

    if (desktopInfo) desktopInfo.style.display = 'flex';
    if (desktopActions) desktopActions.style.display = 'flex';
    if (mobileContainer) mobileContainer.style.display = 'none';
  }
  
  // Listen for window resize to handle switching between desktop and mobile layout
  window.addEventListener('resize', function() {
    const desktopInfo = document.querySelector('.product-info-left');
    const desktopActions = document.querySelector('.product-actions-right');
    const mobileContainer = document.querySelector('.mobile-product-info-container');
    
    if (window.innerWidth <= 1024) {
      if (desktopInfo) desktopInfo.style.display = 'none';
      if (desktopActions) desktopActions.style.display = 'none';
      if (mobileContainer) mobileContainer.style.display = 'block';
    } else {
      if (desktopInfo) desktopInfo.style.display = 'flex';
      if (desktopActions) desktopActions.style.display = 'flex';
      if (mobileContainer) mobileContainer.style.display = 'none';
    }
  });


  items[0].classList.add('active');
  updateMediaPosition();
});
</script>

<script>
  document.querySelectorAll('table').forEach(function(table) {
    var wrapper = document.createElement('div');
    wrapper.classList.add('product-table');
    table.parentNode.insertBefore(wrapper, table);
    wrapper.appendChild(table);
  });
</script>

{% schema %}
  {
    "name": "Product Page",
    "settings": [
      {
        "type": "url",
        "id": "global_size_guide_url",
        "label": "Global Size Guide URL",
        "info": "Default size guide for all products. Can be overridden per-product using metafields."
      }
    ],
    "blocks": [
      {
        "type": "content",
        "name": "Content",
        "settings": [
          {
            "type": "text",
            "id": "content",
            "label": "Content",
            "default": "*CONTENT HERE*"
          }
        ]
      },
      {
        "type": "item-type",
        "name": "Item Type",
        "limit": 1,
        "settings": [
          {
            "type": "paragraph",
            "content": "Select whether this is Pre-made or Pre-order. Will be displayed below the product name"
          },
          {
            "type": "select",
            "id": "item-type",
            "label": "Content",
            "options": [
              {
                "label": "Pre-made",
                "value": "pre-made"
              },
              {
                "label": "Pre-order",
                "value": "pre-order"
              }
            ]
          }
        ]
      },
      {
        "type": "@app"
      },
      {
        "type": "variant-selector",
        "name": "Variant Selector",
        "limit": 1
      },
      {
        "type": "buy-buttons",
        "name": "Buy Buttons",
        "limit": 1,
        "settings": [
          {
            "type": "checkbox",
            "id": "enable_dynamic_checkout",
            "label": "Show dynamic checkout buttons",
            "info": "Using the payment methods available on your store, customers see their preferred option, like PayPal or Apple Pay."
          }
        ]
      }
    ]
  }
{% endschema %}